// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package common is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	AppInfoRequest
	AppInfoReply
*/
package common

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AppInfoRequest struct {
	SrcCode int32 `protobuf:"varint,1,opt,name=srcCode" json:"srcCode,omitempty"`
}

func (m *AppInfoRequest) Reset()                    { *m = AppInfoRequest{} }
func (m *AppInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*AppInfoRequest) ProtoMessage()               {}
func (*AppInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AppInfoRequest) GetSrcCode() int32 {
	if m != nil {
		return m.SrcCode
	}
	return 0
}

type AppInfoReply struct {
	AppName string `protobuf:"bytes,1,opt,name=appName" json:"appName,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
}

func (m *AppInfoReply) Reset()                    { *m = AppInfoReply{} }
func (m *AppInfoReply) String() string            { return proto.CompactTextString(m) }
func (*AppInfoReply) ProtoMessage()               {}
func (*AppInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AppInfoReply) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *AppInfoReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func init() {
	proto.RegisterType((*AppInfoRequest)(nil), "common.appInfoRequest")
	proto.RegisterType((*AppInfoReply)(nil), "common.appInfoReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CommonService service

type CommonServiceClient interface {
	AppInfo(ctx context.Context, in *AppInfoRequest, opts ...grpc.CallOption) (*AppInfoReply, error)
}

type commonServiceClient struct {
	cc *grpc.ClientConn
}

func NewCommonServiceClient(cc *grpc.ClientConn) CommonServiceClient {
	return &commonServiceClient{cc}
}

func (c *commonServiceClient) AppInfo(ctx context.Context, in *AppInfoRequest, opts ...grpc.CallOption) (*AppInfoReply, error) {
	out := new(AppInfoReply)
	err := grpc.Invoke(ctx, "/common.commonService/appInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CommonService service

type CommonServiceServer interface {
	AppInfo(context.Context, *AppInfoRequest) (*AppInfoReply, error)
}

func RegisterCommonServiceServer(s *grpc.Server, srv CommonServiceServer) {
	s.RegisterService(&_CommonService_serviceDesc, srv)
}

func _CommonService_AppInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommonServiceServer).AppInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/common.commonService/AppInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommonServiceServer).AppInfo(ctx, req.(*AppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommonService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "common.commonService",
	HandlerType: (*CommonServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "appInfo",
			Handler:    _CommonService_AppInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "common.proto",
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 163 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xb4, 0xb8, 0xf8,
	0x12, 0x0b, 0x0a, 0x3c, 0xf3, 0xd2, 0xf2, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x24,
	0xb8, 0xd8, 0x8b, 0x8b, 0x92, 0x9d, 0xf3, 0x53, 0x52, 0x25, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83,
	0x60, 0x5c, 0x25, 0x27, 0x2e, 0x1e, 0xb8, 0xda, 0x82, 0x9c, 0x4a, 0x90, 0xca, 0xc4, 0x82, 0x02,
	0xbf, 0xc4, 0x5c, 0x88, 0x4a, 0xce, 0x20, 0x18, 0x17, 0x24, 0x53, 0x96, 0x5a, 0x54, 0x9c, 0x99,
	0x9f, 0x27, 0xc1, 0x04, 0x91, 0x81, 0x72, 0x8d, 0xbc, 0xb8, 0x78, 0x21, 0x36, 0x07, 0xa7, 0x16,
	0x95, 0x65, 0x26, 0xa7, 0x0a, 0x59, 0x82, 0x0d, 0x01, 0x19, 0x2a, 0x24, 0xa6, 0x07, 0x75, 0x22,
	0xaa, 0x8b, 0xa4, 0x44, 0x30, 0xc4, 0x0b, 0x72, 0x2a, 0x95, 0x18, 0x9c, 0x38, 0xa2, 0xa0, 0xbe,
	0x48, 0x62, 0x03, 0x7b, 0xca, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x07, 0xa9, 0x6d, 0x9a, 0xe4,
	0x00, 0x00, 0x00,
}
